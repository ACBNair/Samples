// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of diary_Detail ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class diary_DetailViewModel : BindableBase, Idiary_DetailViewModel, INavigable
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ISpeechService _speechService;
		private readonly IShareService _shareService;
		private readonly ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="diary_DetailViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public diary_DetailViewModel(IDialogService dialogService, INavigationService navigationService, ISpeechService speechService, IShareService shareService, ILiveTileService liveTileService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		

		private diarySchema _currentdiarySchema;

        /// <summary>
        /// CurrentdiarySchema property.
        /// </summary>		
        public diarySchema CurrentdiarySchema
        {
            get
            {
				return _currentdiarySchema;
            }
            set
            {
                SetProperty(ref _currentdiarySchema, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechdiary_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechdiary_DetailStaticControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentdiarySchema.Subtitle);
        }
		

        private ICommand _textToSpeechdiary_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechdiary_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechdiary_DetailStaticControlCommand
        {
            get { return _textToSpeechdiary_DetailStaticControlCommand = _textToSpeechdiary_DetailStaticControlCommand ?? new DelegateCommand(TextToSpeechdiary_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechdescStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechdescStaticControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentdiarySchema.Description + " " + CurrentdiarySchema.Description);
        }
		

        private ICommand _textToSpeechdescStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechdescStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechdescStaticControlCommand
        {
            get { return _textToSpeechdescStaticControlCommand = _textToSpeechdescStaticControlCommand ?? new DelegateCommand(TextToSpeechdescStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Sharediary_DetailStaticControlCommand command.
        /// </summary>
        public  void Sharediary_DetailStaticControlCommandDelegate() 
        {
	
				_shareService.Share(CurrentdiarySchema.Subtitle, " ");
        }
		

        private ICommand _sharediary_DetailStaticControlCommand;

        /// <summary>
        /// Gets the Sharediary_DetailStaticControlCommand command.
        /// </summary>
        public ICommand Sharediary_DetailStaticControlCommand
        {
            get { return _sharediary_DetailStaticControlCommand = _sharediary_DetailStaticControlCommand ?? new DelegateCommand(Sharediary_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SharedescStaticControlCommand command.
        /// </summary>
        public  void SharedescStaticControlCommandDelegate() 
        {
	
				_shareService.Share(CurrentdiarySchema.Description, CurrentdiarySchema.Description);
        }
		

        private ICommand _sharedescStaticControlCommand;

        /// <summary>
        /// Gets the SharedescStaticControlCommand command.
        /// </summary>
        public ICommand SharedescStaticControlCommand
        {
            get { return _sharedescStaticControlCommand = _sharedescStaticControlCommand ?? new DelegateCommand(SharedescStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartdiary_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartdiary_DetailStaticControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(Idiary_DetailViewModel), CreateTileInfodiary_DetailStaticControl());
        }
		

        private ICommand _pinToStartdiary_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartdiary_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartdiary_DetailStaticControlCommand
        {
            get { return _pinToStartdiary_DetailStaticControlCommand = _pinToStartdiary_DetailStaticControlCommand ?? new DelegateCommand(PinToStartdiary_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartdescStaticControlCommand command.
        /// </summary>
        public  void PinToStartdescStaticControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(Idiary_DetailViewModel), CreateTileInfodescStaticControl());
        }
		

        private ICommand _pinToStartdescStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartdescStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartdescStaticControlCommand
        {
            get { return _pinToStartdescStaticControlCommand = _pinToStartdescStaticControlCommand ?? new DelegateCommand(PinToStartdescStaticControlCommandDelegate); }
        }
		public object NavigationContext
        {
            set
            {              
                if (!(value is diarySchema)) { return; }
                
                CurrentdiarySchema = value as diarySchema;
            }
        }
        /// <summary>
        /// Initializes a <see cref="TileInfo" /> object for the diary_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="TileInfo" /> object.</returns>
        public TileInfo CreateTileInfodiary_DetailStaticControl()
        {
            var tileInfo = new TileInfo
            {
                CurrentId = CurrentdiarySchema.Id.ToString(),
                Title = CurrentdiarySchema.Subtitle,
                BackTitle = CurrentdiarySchema.Subtitle,
                BackContent = string.Empty,
                Count = 0,
                BackgroundImagePath = CurrentdiarySchema.Image,
                BackBackgroundImagePath = CurrentdiarySchema.Image,
                LogoPath = "Logo-fee674dd-17e3-4874-ad8f-9b2146854d85.png"
            };
            return tileInfo;
        }
        /// <summary>
        /// Initializes a <see cref="TileInfo" /> object for the descStaticControl control.
        /// </summary>
		/// <returns>A <see cref="TileInfo" /> object.</returns>
        public TileInfo CreateTileInfodescStaticControl()
        {
            var tileInfo = new TileInfo
            {
                CurrentId = CurrentdiarySchema.Id.ToString(),
                Title = CurrentdiarySchema.Description,
                BackTitle = CurrentdiarySchema.Description,
                BackContent = CurrentdiarySchema.Description,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-fee674dd-17e3-4874-ad8f-9b2146854d85.png"
            };
            return tileInfo;
        }
    }
}
