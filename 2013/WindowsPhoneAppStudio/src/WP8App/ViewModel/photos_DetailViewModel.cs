// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Windows.Input;
using WPAppStudio;
using WPAppStudio.Controls;
using WPAppStudio.Entities;
using WPAppStudio.Entities.Base;
using WPAppStudio.Localization;
using WPAppStudio.Repositories;
using WPAppStudio.Services;
using WPAppStudio.Services.Interfaces;
using WPAppStudio.Shared;
using WPAppStudio.ViewModel.Base;
using WPAppStudio.ViewModel.Interfaces;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of photos_Detail ViewModel.
    /// </summary>
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.CodeDom.Compiler.GeneratedCode("Radarc", "4.0")]
    public partial class photos_DetailViewModel : BindableBase, Iphotos_DetailViewModel, INavigable
    {       

		private readonly IDialogService _dialogService;
		private readonly INavigationService _navigationService;
		private readonly ISpeechService _speechService;
		private readonly IShareService _shareService;
		private readonly ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="photos_DetailViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public photos_DetailViewModel(IDialogService dialogService, INavigationService navigationService, ISpeechService speechService, IShareService shareService, ILiveTileService liveTileService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		

		private photosCollectionSchema _currentphotosCollectionSchema;

        /// <summary>
        /// CurrentphotosCollectionSchema property.
        /// </summary>		
        public photosCollectionSchema CurrentphotosCollectionSchema
        {
            get
            {
				return _currentphotosCollectionSchema;
            }
            set
            {
                SetProperty(ref _currentphotosCollectionSchema, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechphotos_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechphotos_DetailStaticControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentphotosCollectionSchema.Title);
        }
		

        private ICommand _textToSpeechphotos_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechphotos_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechphotos_DetailStaticControlCommand
        {
            get { return _textToSpeechphotos_DetailStaticControlCommand = _textToSpeechphotos_DetailStaticControlCommand ?? new DelegateCommand(TextToSpeechphotos_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Sharephotos_DetailStaticControlCommand command.
        /// </summary>
        public  void Sharephotos_DetailStaticControlCommandDelegate() 
        {
	
				_shareService.Share(CurrentphotosCollectionSchema.Title, " ");
        }
		

        private ICommand _sharephotos_DetailStaticControlCommand;

        /// <summary>
        /// Gets the Sharephotos_DetailStaticControlCommand command.
        /// </summary>
        public ICommand Sharephotos_DetailStaticControlCommand
        {
            get { return _sharephotos_DetailStaticControlCommand = _sharephotos_DetailStaticControlCommand ?? new DelegateCommand(Sharephotos_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartphotos_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartphotos_DetailStaticControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(Iphotos_DetailViewModel), CreateTileInfophotos_DetailStaticControl());
        }
		

        private ICommand _pinToStartphotos_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartphotos_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartphotos_DetailStaticControlCommand
        {
            get { return _pinToStartphotos_DetailStaticControlCommand = _pinToStartphotos_DetailStaticControlCommand ?? new DelegateCommand(PinToStartphotos_DetailStaticControlCommandDelegate); }
        }
		public object NavigationContext
        {
            set
            {              
                if (!(value is photosCollectionSchema)) { return; }
                
                CurrentphotosCollectionSchema = value as photosCollectionSchema;
            }
        }
        /// <summary>
        /// Initializes a <see cref="TileInfo" /> object for the photos_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="TileInfo" /> object.</returns>
        public TileInfo CreateTileInfophotos_DetailStaticControl()
        {
            var tileInfo = new TileInfo
            {
                CurrentId = CurrentphotosCollectionSchema.Id.ToString(),
                Title = CurrentphotosCollectionSchema.Title,
                BackTitle = CurrentphotosCollectionSchema.Title,
                BackContent = string.Empty,
                Count = 0,
                BackgroundImagePath = CurrentphotosCollectionSchema.Image,
                BackBackgroundImagePath = CurrentphotosCollectionSchema.Image,
                LogoPath = "Logo-fee674dd-17e3-4874-ad8f-9b2146854d85.png"
            };
            return tileInfo;
        }
    }
}
